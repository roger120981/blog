---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import BaseLayout from "@layouts/base/BaseLayout.astro";
import PageLayout from "@layouts/page/PageLayout.astro";
import BlogPostLayout from "@layouts/blog-post/BlogPostLayout.astro";

export interface Props {
  entry:
    | CollectionEntry<"pages">
    | CollectionEntry<"posts">
    | CollectionEntry<"projects">;
}

export async function getStaticPaths() {
  const pages = await getCollection("pages", (entry) => {
    return !["home"].includes(entry.slug) && entry.data.draft === false;
  });

  const posts = await getCollection("posts", ({ data }) => !data.draft);

  const projects = await getCollection("projects", ({ data }) => !data.draft);

  return [...pages, ...posts, ...projects].map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

{
  entry.collection === "pages" ? (
    <PageLayout entry={entry}>
      <Content />
    </PageLayout>
  ) : entry.collection === "posts" ? (
    <BlogPostLayout entry={entry}>
      <Content />
    </BlogPostLayout>
  ) : (
    <BaseLayout entry={entry}>
      <Content />
    </BaseLayout>
  )
}
